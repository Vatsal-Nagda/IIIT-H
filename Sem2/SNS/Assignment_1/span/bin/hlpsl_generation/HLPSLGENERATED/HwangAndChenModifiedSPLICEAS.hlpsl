role role_S(S:agent,C:agent,AS:agent,Pks:public_key,Pkas:public_key,Pkc:public_key,Inc:function,SND,RCV:channel(dy))
played_by S
def=
	local
		State:nat,L:text,T:text,N3:text,N2:text
	init
		State := 0
	transition
		3. State=0 /\ RCV(C.S.{C.T'.L'.{N2'}_Pks}_inv(Pkc)) =|> State':=1 /\ N3':=new() /\ SND(S.C.N3')
		5. State=1 /\ RCV(AS.{AS.S.N3.C.Pkc}_inv(Pkas)) =|> State':=2 /\ SND(S.C.{S.Inc(N2)}_Pkc)
end role

role role_C(S:agent,C:agent,AS:agent,Pks:public_key,Pkas:public_key,Pkc:public_key,Inc:function,SND,RCV:channel(dy))
played_by C
def=
	local
		State:nat,N1:text,L:text,T:text,N2:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ N1':=new() /\ SND(C.S.N1')
		2. State=1 /\ RCV(AS.{AS.C.N1.S.Pks}_inv(Pkas)) =|> State':=2 /\ N2':=new() /\ L':=new() /\ T':=new() /\ SND(C.S.{C.T'.L'.{N2'}_Pks}_inv(Pkc))
		6. State=2 /\ RCV(S.C.{S.Inc(N2)}_Pkc) =|> State':=3
end role

role role_AS(S:agent,C:agent,AS:agent,Pks:public_key,Pkas:public_key,Pkc:public_key,Inc:function,SND,RCV:channel(dy))
played_by AS
def=
	local
		State:nat,N1:text,N3:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(C.S.N1') =|> State':=1 /\ SND(AS.{AS.C.N1'.S.Pks}_inv(Pkas))
		4. State=1 /\ RCV(S.C.N3') =|> State':=2 /\ SND(AS.{AS.S.N3'.C.Pkc}_inv(Pkas))
end role

role session1(S:agent,C:agent,AS:agent,Pks:public_key,Pkas:public_key,Pkc:public_key,Inc:function)
def=
	local
		SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_AS(S,C,AS,Pks,Pkas,Pkc,Inc,SND3,RCV3) /\ role_C(S,C,AS,Pks,Pkas,Pkc,Inc,SND2,RCV2) /\ role_S(S,C,AS,Pks,Pkas,Pkc,Inc,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,pk3:public_key,pk1:public_key,c:agent,s:agent,as:agent,pk2:public_key,inc:function,auth_1:protocol_id
	intruder_knowledge = {}
	composition
		session1(s,c,as,pk1,pk2,pk3,inc)
end role

goal
	authentication_on auth_1
end goal

environment()