role role_A(A:agent,G:agent,C:agent,S:agent,U:agent,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,N1:text,L1:text,Ku:symmetric_key,T1start:text,Kcg:symmetric_key,T1expire:text,Kag:symmetric_key
	init
		State := 0
	transition
		1. State=0 /\ RCV(U.G.L1'.N1') =|> State':=1 /\ Ku':=new() /\ T1expire':=new() /\ T1start':=new() /\ Kcg':=new() /\ Kag':=new() /\ SND(U.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{G.Kcg'.T1start'.T1expire'}_Ku')
end role

role role_G(A:agent,G:agent,C:agent,S:agent,U:agent,SND,RCV:channel(dy))
played_by G
def=
	local
		State:nat,T1:text,L2:text,T1expire:text,T1start:text,Kag:symmetric_key,Kcg:symmetric_key,T2expire:text,Kcs:symmetric_key,T2start:text,N2:text,Kgs:symmetric_key
	init
		State := 0
	transition
		3. State=0 /\ RCV(S.L2'.N2'.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{C.T1'}_Kcg') =|> State':=1 /\ T2expire':=new() /\ T2start':=new() /\ Kcs':=new() /\ Kgs':=new() /\ SND(U.{U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{S.Kcs'.T2start'.T2expire'.N2'}_Kcg')
end role

role role_C(A:agent,G:agent,C:agent,S:agent,U:agent,SND,RCV:channel(dy))
played_by C
def=
	local
		State:nat,N1:text,L1:text,Ku:symmetric_key,T1:text,L2:text,T1expire:text,T1start:text,Kag:symmetric_key,Kcg:symmetric_key,N2:text,T2expire:text,T2start:text,Kgs:symmetric_key,Kcs:symmetric_key,T2:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ N1':=new() /\ L1':=new() /\ SND(U.G.L1'.N1')
		2. State=1 /\ RCV(U.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{G.Kcg'.T1start'.T1expire'}_Ku') =|> State':=2 /\ T1':=new() /\ N2':=new() /\ L2':=new() /\ SND(S.L2'.N2'.{U.C.G.Kcg'.T1start'.T1expire'}_Kag'.{C.T1'}_Kcg')
		4. State=2 /\ RCV(U.{U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{S.Kcs'.T2start'.T2expire'.N2}_Kcg) =|> State':=3 /\ T2':=new() /\ SND({U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{C.T2'}_Kcs')
		6. State=3 /\ RCV({T2}_Kcs) =|> State':=4
end role

role role_S(A:agent,G:agent,C:agent,S:agent,U:agent,SND,RCV:channel(dy))
played_by S
def=
	local
		State:nat,T2expire:text,T2start:text,Kgs:symmetric_key,Kcs:symmetric_key,T2:text
	init
		State := 0
	transition
		5. State=0 /\ RCV({U.C.S.Kcs'.T2start'.T2expire'}_Kgs'.{C.T2'}_Kcs') =|> State':=1 /\ SND({T2'}_Kcs')
end role

role role_U(A:agent,G:agent,C:agent,S:agent,U:agent,SND,RCV:channel(dy))
played_by U
def=
	local
		State:nat
	init
		State := 0
	transition
end role

role session1(A:agent,G:agent,C:agent,S:agent,U:agent)
def=
	local
		SND5,RCV5,SND4,RCV4,SND3,RCV3,SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_U(A,G,C,S,U,SND5,RCV5) /\ role_S(A,G,C,S,U,SND4,RCV4) /\ role_C(A,G,C,S,U,SND3,RCV3) /\ role_G(A,G,C,S,U,SND2,RCV2) /\ role_A(A,G,C,S,U,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,s:agent,g:agent,a:agent,c:agent,u:agent,auth_1:protocol_id
	intruder_knowledge = {}
	composition
		session1(a,g,c,s,u)
end role

goal
	authentication_on auth_1
end goal

environment()