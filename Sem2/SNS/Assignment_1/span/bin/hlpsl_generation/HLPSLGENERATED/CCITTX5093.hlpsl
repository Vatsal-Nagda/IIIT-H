role role_A(A:agent,B:agent,PKa:public_key,PKb:public_key,Xa:text,SND,RCV:channel(dy))
played_by A
def=
	local
		State:nat,Ta:text,Ya:text,Xb:text,Tb:text,Na:text,Yb:text,Nb:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(start) =|> State':=1 /\ Ya':=new() /\ Na':=new() /\ witness(A,B,auth_1,Na') /\ Ta':=new() /\ SND(A.{Ta'.Na'.B.Xa.{Ya'}_PKb}_inv(PKa))
		2. State=1 /\ RCV(B.{Tb'.Nb'.A.Na.Xb'.{Yb'}_PKa}_inv(PKb)) =|> State':=2 /\ SND(A.{Nb'}_inv(PKa))
end role

role role_B(A:agent,B:agent,PKa:public_key,PKb:public_key,SND,RCV:channel(dy))
played_by B
def=
	local
		State:nat,Xa:text,Ta:text,Ya:text,Xb:text,Tb:text,Na:text,Yb:text,Nb:text
	init
		State := 0
	transition
		1. State=0 /\ RCV(A.{Ta'.Na'.B.Xa'.{Ya'}_PKb}_inv(PKa)) =|> State':=1 /\ request(B,A,auth_1,Na') /\ Yb':=new() /\ Xb':=new() /\ Nb':=new() /\ Tb':=new() /\ SND(B.{Tb'.Nb'.A.Na'.Xb'.{Yb'}_PKa}_inv(PKb))
		3. State=1 /\ RCV(A.{Nb}_inv(PKa)) =|> State':=2
end role

role session1(Xa:text,A:agent,B:agent,PKa:public_key,PKb:public_key)
def=
	local
		SND2,RCV2,SND1,RCV1:channel(dy)
	composition
		role_B(A,B,PKa,PKb,SND2,RCV2) /\ role_A(A,B,PKa,PKb,Xa,SND1,RCV1)
end role

role environment()
def=
	const
		hash_0:function,pk1:public_key,alice:agent,data:text,bob:agent,pk2:public_key,auth_1:protocol_id
	intruder_knowledge = {}
	composition
		session1(data,alice,bob,pk1,pk2)
end role

goal
	authentication_on auth_1
end goal

environment()